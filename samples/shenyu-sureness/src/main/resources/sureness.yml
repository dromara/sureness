## -- sureness.yml document dataSource-- ##

# load api resource which need be protected, config role who can access these resource.
# resources that are not configured are also authenticated and protected by default, but not authorized
# eg: /api/v1/bar===post===[role1] means /api/v1/bar===post can be access by role1
# eg: /api/v3/foo===get===[] means /api/v3/foo===* can not be access by any role
resourceRole:
  - /api/v1/bar/*===get===[role1,role2,role3]
  - /api/v1/bar===post===[role1]
  - /api/v2/bar===put===[role2]
  - /api/v2/foo===get===[role3]
  - /api/v3/foo===get===[]

# load api resource which do not need be protected, means them need be excluded.
# these api resource can be access by everyone
# eg: /**/*.png===* means get/post/put/delete/patch any url suffixed with `.png` can be access by everyone
excludedResource:
  - /api/v2/foo===delete
  - /**/*.html===get
  - /**/*.js===get
  - /**/*.css===get
  - /**/*.ico===*
  - /**/*.png===*


# account info
# there are three account: sam, tom, lisa
# eg: sam has [role1,role2,role3], password is sam123, has salt -> 123
# eg: tom has role2, password is tom123
# eg: lisa has role3, password is lisa123
account:
  - appId: sam
    # if add salt, the credential is encrypted by md5 - result is: MD5(password+salt)
    # digest auth not support encrypted credential
    credential: 1B9E9136628CB1B161AE47132DD7AF19
    salt: 123
    role: [role1,role2,role3]
  - appId: tom
    credential: tom123
    role: [role2]
  - appId: lisa
    credential: lisa123
    role: [role3]